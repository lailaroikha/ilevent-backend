


version: '3.8'

services:
  service-backend:
    container_name: ilevent-docker
    build:
      dockerfile: Dockerfile
      context: .
    env_file:
      - .env
    ports:
      - 8080:8080

#  postgres-event-hive-container:
#    image: postgres:alpine
#    restart: always
#    networks:
#      - pg_default
#    ports:
#      - "5432:5432"
#    environment:
#      POSTGRES_PASSWORD: ${DB_PASSWORD}
#      POSTGRES_DB: ${DB_NAME}
#      POSTGRES_USER: ${DB_USERNAME}
#    volumes:
#      - event-hive-data:/var/lib/postgresql/data
#
#  pgadmin:
#    container_name: pgadmin-event-hive
#    image: dpage/pgadmin4
#    restart: always
#    environment:
#      PGADMIN_DEFAULT_EMAIL: admin@admin.com
#      PGADMIN_DEFAULT_PASSWORD: root
#    ports:
#      - "5050:80"
#
#volumes:
#  event-hive-data:
#
#networks:
#  pg_default:
#    driver: bridge

#services:
#  app:
#    image: mini-project-app:latest
#    ports:
#      - "8081:8080"
#    env_file:
#      - .env
#    depends_on:
#      - db
#
##redis:
##  image: redis:latest
##  ports:
##
##  "6379:6379"
#
##  db:
##    image: postgres:13
##    env_file:
##      - .env
##    ports:
##      - "5432:5432"
##    volumes:
##      - postgres_data:/var/lib/postgresql/data
##
##volumes:
##  postgres_data:
#
##version: '3.8'
##
##services:
##  app:
##    image: ilevent-backend-app:latest
###    build:
###      context: .
###      dockerfile: Dockerfile
##    ports:
##    - "8080:8080"
##    env_file:
##      - .env
##  postgres:
##    image: postgres:alpine
##    restart: always
##    environment:
##      POSTGRES_USER: admin
##      POSTGRES_PASSWORD: 1n11l4
##      POSTGRES_DB: ilevents
##    ports:
##      - '5433:5432'
##    volumes:
##      - postgres-ilevents:/var/lib/postgresql/data
##
##
##volumes:
##  postgres-ilevents:
##
